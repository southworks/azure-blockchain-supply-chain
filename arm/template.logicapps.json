{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connectionsDocumentdbName": {
            "defaultValue": "database-connection",
            "type": "String"
        },
        "connectionsAzureeventgridName": {
            "defaultValue": "event-grid-connection",
            "type": "String"
        },
        "connectionsOffice365Name": {
            "defaultValue": "office365-connection",
            "type": "String"
        },
        "workflowsConsortiumEventsName": {
            "defaultValue": "consortium-events",
            "type": "String"
        },
        "workflowsEmailNotificationTriggerName": {
            "defaultValue": "email-notification-trigger",
            "type": "String"
        },
        "databaseName": {
            "type": "String",
            "defaultValue": "supplychaindb",
            "metadata": {
                "description": "Cosmos DB database name"
            }
        },
        "messageCollectionName": {
            "type": "String",
            "defaultValue": "messages",
            "metadata": {
                "description": "Cosmos DB collection name"
            }
        },
        "databaseAccountName": {
            "type": "String",
            "defaultValue": "[concat('db-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Cosmos DB account name, max length 44 characters"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "eventGridTopicExternalid": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.EventGrid/topics/', parameters('connectionsAzureeventgridName'),'')]",
        "dbResourceId": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.DocumentDb/databaseAccounts/',parameters('databaseAccountName'))]",
        "cosmosDbApiVersion": "2020-04-01"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connectionsAzureeventgridName')]",
            "location": "[parameters('location')]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('connectionsAzureeventgridName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'azureeventgrid')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connectionsDocumentdbName')]",
            "location": "[parameters('location')]",
            "properties": {
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'documentdb')]"
                },
                "displayName": "[parameters('connectionsDocumentdbName')]",
                "parameterValues": {
                    "databaseAccount": "[parameters('databaseAccountName')]",
                    "accessKey": "[listKeys(variables('dbResourceId'),variables('cosmosDbApiVersion')).primaryMasterKey]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflowsConsortiumEventsName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connectionsAzureeventgridName'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connectionsDocumentdbName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "topic": "[variables('eventGridTopicExternalid')]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                                    }
                                },
                                "path": "[concat(subscription().id,'/providers/Microsoft.EventGrid.Topics/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-09-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_or_update_document": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@addProperty(triggerBody()?['data'], 'id', utcNow())",
                                "headers": {
                                    "x-ms-documentdb-raw-partitionkey": "\"@{triggerBody()['data']['MessageType']}\""
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "[concat('/dbs/',parameters('databaseName'),'/colls/',parameters('messageCollectionName'),'/docs')]"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureeventgrid": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connectionsAzureeventgridName'))]",
                                "connectionName": "azureeventgrid",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'azureeventgrid')]"
                            },
                            "documentdb": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connectionsDocumentdbName'))]",
                                "connectionName": "documentdb",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'documentdb')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connectionsOffice365Name')]",
            "location": "[parameters('location')]",
            "properties": {
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'office365')]"
                },
                "displayName": "[parameters('connectionsOffice365Name')]"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflowsEmailNotificationTriggerName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connectionsAzureeventgridName'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connectionsOffice365Name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "topic": "[variables('eventGridTopicExternalid')]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                                    }
                                },
                                "path": "[concat(subscription().id,'/providers/Microsoft.EventGrid.Topics/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Send_an_email_(V2)": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Body": "<p> Order @{triggerBody()['data']['EventValue'][0]['ParameterValue']} @{toLower(replace(triggerBody()['data']['EventValue'][3]['ParameterValue'],'Order ',''))}</p>",
                                            "Subject": "Order @{triggerBody()['data']['EventValue'][0]['ParameterValue']} status: @{toUpper(replace(triggerBody()['data']['EventValue'][3]['ParameterValue'],'Order ',''))} ",
                                            "To": "@{triggerBody()['data']['EventValue'][2]['ParameterValue']}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()['data']['MessageType']",
                                            "DecodedContractEventsMsg"
                                        ]
                                    },
                                    {
                                        "or": [
                                            {
                                                "equals": [
                                                    "@triggerBody()['data']['EventName']",
                                                    "OrderDelivered"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@triggerBody()['data']['EventName']",
                                                    "OrderCreated"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@triggerBody()['data']['EventName']",
                                                    "OrderAccepted"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@triggerBody()['data']['EventName']",
                                                    "OrderCancelled"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@triggerBody()['data']['EventName']",
                                                    "OrderRejected"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@triggerBody()['data']['EventName']",
                                                    "OrderDelivered"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@triggerBody()['data']['EventName']",
                                                    "DeliveryConfirmed"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureeventgrid": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connectionsAzureeventgridName'))]",
                                "connectionName": "azureeventgrid",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'azureeventgrid')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connectionsOffice365Name'))]",
                                "connectionName": "office365",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'office365')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}